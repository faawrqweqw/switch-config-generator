# 华为设备配置模板

vlan_complete_config:
  description: "VLAN一体化配置（可选创建VLAN+可选接口配置+可选IP配置）"
  parameters:
    # 是否创建VLAN开关
    create_vlan:
      type: "boolean"
      required: false
      default: false
      description: "是否创建VLAN"
      order: 1

    # VLAN创建参数
    vlan_id:
      type: "string"
      required: false
      description: "VLAN ID（支持批量，如：10,20,30-40）"
      order: 2
    vlan_name:
      type: "string"
      required: false
      max_length: 32
      description: "VLAN名称"
      order: 3

    # 是否配置接口VLAN开关
    configure_interface:
      type: "boolean"
      required: false
      default: false
      description: "是否配置接口VLAN"
      order: 4

    # 接口配置参数
    interface:
      type: "string"
      required: false
      description: "接口名称（支持范围，如：GigabitEthernet0/0/1-4）"
      order: 5
    port_mode:
      type: "string"
      required: false
      options: ["access", "trunk"]
      description: "端口模式"
      order: 6
    pvid:
      type: "integer"
      required: false
      range: [1, 4094]
      description: "端口PVID"
      order: 7
    allowed_vlans:
      type: "string"
      required: false
      description: "允许通过的VLAN列表(仅trunk模式，支持范围如：10,20,30-40)"
      order: 8

    # 删除了VLAN接口IP配置参数
  commands: |
    {% if create_vlan and vlan_id %}
    # 第一步：创建VLAN
    {% if is_batch %}
    vlan batch {{ vlan_batch }}
    {% if vlan_name %}
    {% for vlan in vlan_list %}
    vlan {{ vlan }}
     description {{ vlan_name }}
    quit
    {% endfor %}
    {% endif %}
    {% else %}
    vlan {{ vlan_id }}
    {% if vlan_name %}
     description {{ vlan_name }}
    {% endif %}
    quit
    {% endif %}
    {% endif %}

    {% if configure_interface and interface and port_mode %}
    # 第二步：配置接口VLAN
    {% for port in port_list %}
    interface {{ port }}
    {% if port_mode == 'access' %}
    port link-type access
    port default vlan {{ pvid }}
    {% elif port_mode == 'trunk' %}
    port link-type trunk
    {% if pvid %}
    port trunk pvid vlan {{ pvid }}
    {% endif %}
    port trunk allow-pass vlan {{ trunk_vlans if trunk_vlans else vlan_id }}
    {% endif %}
    quit
    {% endfor %}
    {% endif %}

    # 删除了VLAN接口IP配置命令
  example:
    create_vlan: true
    vlan_id: "100"
    vlan_name: "office-network"
    configure_interface: true
    interface: "GigabitEthernet0/0/1-4"
    port_mode: "access"
    pvid: 100
    # 删除了VLAN接口IP配置示例

port_aggregation:
  description: "端口聚合配置"
  parameters:
    mode:
      type: "string"
      required: true
      options: ["manual", "lacp-static", "lacp-dynamic"]
      description: "聚合模式"
      order: 1
    lag_id:
      type: "integer"
      required: true
      range: [1, 128]
      description: "聚合组ID"
      order: 2
    description:
      type: "string"
      required: false
      max_length: 80
      description: "聚合接口描述"
      order: 3
    interfaces:
      type: "string"
      required: true
      description: "聚合接口列表（支持范围，如：GigabitEthernet0/0/1-4）"
      order: 4

    # 负载均衡配置
    configure_load_balance:
      type: "boolean"
      required: false
      default: false
      description: "是否配置负载均衡算法"
      order: 5
    load_balance_mode:
      type: "string"
      required: false
      options: ["dst-ip", "dst-mac", "src-ip", "src-mac", "src-dst-ip", "src-dst-mac"]
      description: "负载均衡算法"
      order: 6

    # LACP配置
    configure_lacp_priority:
      type: "boolean"
      required: false
      default: false
      description: "是否配置LACP优先级"
      order: 7
    lacp_system_priority:
      type: "integer"
      required: false
      min: 0
      max: 65535
      description: "LACP系统优先级（0-65535，默认32768）"
      order: 8
    lacp_port_priority:
      type: "integer"
      required: false
      min: 0
      max: 65535
      description: "LACP端口优先级（0-65535，默认32768）"
      order: 9

    # LACP超时配置
    configure_lacp_timeout:
      type: "boolean"
      required: false
      default: false
      description: "是否配置LACP超时模式"
      order: 10
    lacp_timeout:
      type: "string"
      required: false
      options: ["fast", "slow"]
      description: "LACP超时模式（fast: 1秒，slow: 30秒）"
      order: 11

    # 高级配置
    configure_advanced:
      type: "boolean"
      required: false
      default: false
      description: "是否配置高级选项"
      order: 12
    min_active_links:
      type: "integer"
      required: false
      min: 1
      max: 8
      description: "最小活动链路数"
      order: 13
    local_preference:
      type: "boolean"
      required: false
      default: false
      description: "是否启用本地优先转发"
      order: 14
  commands: |
    # 配置LACP系统优先级（全局配置）
    {% if configure_lacp_priority and lacp_system_priority is defined %}
    lacp priority {{ lacp_system_priority }}
    {% endif %}

    # 创建聚合接口
    interface Eth-Trunk{{ lag_id }}
    {% if mode == 'manual' %}
    mode manual load-balance
    {% elif mode == 'lacp-static' %}
    mode lacp-static
    {% elif mode == 'lacp-dynamic' %}
    mode lacp-dynamic
    {% endif %}
    {% if description %}
     description {{ description }}
    {% endif %}

    # 配置负载均衡算法
    {% if configure_load_balance and load_balance_mode %}
    load-balance {{ load_balance_mode }}
    {% endif %}

    # 配置最小活动链路数
    {% if configure_advanced and min_active_links is defined %}
    least active-linknumber {{ min_active_links }}
    {% endif %}

    # 配置本地优先转发
    {% if configure_advanced and local_preference is defined %}
    {% if local_preference %}
    local-preference enable
    {% else %}
    local-preference disable
    {% endif %}
    {% endif %}
    quit

    # 将成员接口加入聚合组并配置端口优先级
    {% for port in member_port_list %}
    interface {{ port }}
    eth-trunk {{ lag_id }}
    {% if configure_lacp_priority and lacp_port_priority is defined %}
    lacp priority {{ lacp_port_priority }}
    {% endif %}
    {% if configure_lacp_timeout and lacp_timeout %}
    lacp timeout {{ lacp_timeout }}
    {% endif %}
    quit
    {% endfor %}
  example:
    mode: "lacp-static"
    lag_id: 1
    description: "Server connection"
    interfaces: "GigabitEthernet0/0/1-4"
    configure_load_balance: true
    load_balance_mode: "src-dst-ip"
    configure_lacp_priority: true
    lacp_system_priority: 32768
    lacp_port_priority: 32768
    configure_lacp_timeout: true
    lacp_timeout: "fast"
    configure_advanced: true
    min_active_links: 2
    local_preference: true

ospf_config:
  description: "OSPF路由协议配置"
  parameters:
    # 基础配置
    enable_basic_config:
      type: "boolean"
      required: false
      default: false
      description: "基础OSPF配置"
      order: 1

    process_id:
      type: "integer"
      required: true
      range: [1, 65535]
      description: "OSPF进程ID"
      order: 2
    router_id:
      type: "string"
      required: true
      pattern: "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"
      description: "OSPF路由器ID（IP地址格式）"
      order: 3
    areas:
      type: "string"
      required: true
      description: "OSPF区域和网络配置（格式：区域ID:网络地址/掩码，多个用逗号分隔）"
      placeholder: "0.0.0.0:192.168.1.0/24,0.0.0.1:192.168.2.0/24"
      order: 4

    # 区域认证配置
    configure_area_auth:
      type: "boolean"
      required: false
      default: false
      description: "是否配置区域认证"
      order: 5
    area_auth_type:
      type: "string"
      required: false
      options: ["simple", "md5"]
      description: "区域认证类型"
      order: 6
    area_auth_area:
      type: "string"
      required: false
      pattern: "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"
      description: "认证区域ID"
      order: 7
    area_auth_password:
      type: "string"
      required: false
      max_length: 255
      description: "认证密码"
      order: 8

    # 接口认证配置
    configure_interface_auth:
      type: "boolean"
      required: false
      default: false
      description: "是否配置接口认证"
      order: 9
    interface_auth_interface:
      type: "string"
      required: false
      description: "认证接口名称"
      order: 10
    interface_auth_type:
      type: "string"
      required: false
      options: ["simple", "md5"]
      description: "接口认证类型"
      order: 11
    interface_auth_password:
      type: "string"
      required: false
      max_length: 255
      description: "接口认证密码"
      order: 12

    # 高级配置
    configure_advanced:
      type: "boolean"
      required: false
      default: false
      description: "是否配置高级选项"
      order: 13
    stub_area:
      type: "string"
      required: false
      pattern: "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"
      description: "Stub区域ID"
      order: 14
    nssa_area:
      type: "string"
      required: false
      pattern: "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"
      description: "NSSA区域ID"
      order: 15
    area_range:
      type: "string"
      required: false
      description: "区域路由聚合（格式：区域ID:网络地址/掩码）"
      placeholder: "0.0.0.1:192.168.0.0/22"
      order: 16

    # 接口配置
    configure_interface:
      type: "boolean"
      required: false
      default: false
      description: "是否配置接口参数"
      order: 17
    interface_name:
      type: "string"
      required: false
      description: "接口名称"
      placeholder: "GigabitEthernet0/0/1"
      order: 18
    configure_interface_routing:
      type: "boolean"
      required: false
      default: false
      description: "是否将物理接口配置为路由模式（仅物理接口需要）"
      order: 19
    interface_cost:
      type: "integer"
      required: false
      range: [1, 65535]
      description: "接口开销值"
      order: 20
    interface_priority:
      type: "integer"
      required: false
      range: [0, 255]
      description: "接口优先级"
      order: 21

    # 定时器配置
    configure_timers:
      type: "boolean"
      required: false
      default: false
      description: "是否配置OSPF定时器"
      order: 22
    hello_interval:
      type: "integer"
      required: false
      range: [1, 65535]
      description: "Hello间隔时间（秒）"
      order: 23
    dead_interval:
      type: "integer"
      required: false
      range: [1, 65535]
      description: "Dead间隔时间（秒）"
      order: 24

    # 路由引入配置
    configure_redistribute:
      type: "boolean"
      required: false
      default: false
      description: "是否配置路由引入"
      order: 25
    redistribute_static:
      type: "boolean"
      required: false
      default: false
      description: "引入静态路由"
      order: 26
    redistribute_direct:
      type: "boolean"
      required: false
      default: false
      description: "引入直连路由"
      order: 27
    redistribute_rip:
      type: "boolean"
      required: false
      default: false
      description: "引入RIP路由"
      order: 28
    redistribute_bgp:
      type: "boolean"
      required: false
      default: false
      description: "引入BGP路由"
      order: 29
    redistribute_isis:
      type: "boolean"
      required: false
      default: false
      description: "引入ISIS路由"
      order: 30
    redistribute_cost:
      type: "integer"
      required: false
      range: [1, 16777214]
      description: "引入路由的开销值"
      placeholder: "100"
      order: 31
    redistribute_type:
      type: "string"
      required: false
      options: ["1", "2"]
      description: "引入路由的类型（1=Type-1外部路由，2=Type-2外部路由）"
      order: 32

  commands: |
    # 配置OSPF基本功能
    ospf {{ process_id }} router-id {{ router_id }}

    # 配置区域和网络
    {% for area_network in area_network_list %}
    area {{ area_network.area_id }}
    network {{ area_network.network }} {{ area_network.wildcard }}
    {% endfor %}

    # 配置区域认证
    {% if configure_area_auth and area_auth_type and area_auth_area and area_auth_password %}
    area {{ area_auth_area }}
    {% if area_auth_type == 'simple' %}
    authentication-mode simple plain {{ area_auth_password }}
    {% elif area_auth_type == 'md5' %}
    authentication-mode md5 1 plain {{ area_auth_password }}
    {% endif %}
    {% endif %}

    # 配置高级区域选项
    {% if configure_advanced %}
    {% if stub_area %}
    area {{ stub_area }}
    stub
    {% endif %}
    {% if nssa_area %}
    area {{ nssa_area }}
    nssa
    {% endif %}
    {% if area_range %}
    {% set range_parts = area_range.split(':') %}
    {% if range_parts|length == 2 %}
    {% set area_id = range_parts[0] %}
    {% set network_mask = range_parts[1].split('/') %}
    {% if network_mask|length == 2 %}
    area {{ area_id }}
    abr-summary {{ network_mask[0] }} {{ network_mask[1] | cidr_to_netmask }}
    {% endif %}
    {% endif %}
    {% endif %}
    {% endif %}
    quit

    # 配置接口认证
    {% if configure_interface_auth and interface_auth_interface and interface_auth_type and interface_auth_password %}
    interface {{ interface_auth_interface }}
    {% if configure_interface_routing and interface_auth_interface == interface_name %}
    # 配置接口为路由模式
    undo portswitch
    {% endif %}
    {% if interface_auth_type == 'simple' %}
    ospf authentication-mode simple plain {{ interface_auth_password }}
    {% elif interface_auth_type == 'md5' %}
    ospf authentication-mode md5 1 plain {{ interface_auth_password }}
    {% endif %}
    quit
    {% endif %}

    # 配置接口参数
    {% if configure_interface and interface_name %}
    interface {{ interface_name }}
    {% if configure_interface_routing %}
    # 配置接口为路由模式
    undo portswitch
    {% endif %}
    {% if interface_cost %}
    ospf cost {{ interface_cost }}
    {% endif %}
    {% if interface_priority %}
    ospf dr-priority {{ interface_priority }}
    {% endif %}
    {% if configure_timers %}
    {% if hello_interval %}
    ospf timer hello {{ hello_interval }}
    {% endif %}
    {% if dead_interval %}
    ospf timer dead {{ dead_interval }}
    {% endif %}
    {% endif %}
    quit
    {% endif %}

    # 配置路由引入（在OSPF进程内）
    {% if configure_redistribute %}
    ospf {{ process_id }} router-id {{ router_id }}
    {% if redistribute_static %}
    import-route static{% if redistribute_cost %} cost {{ redistribute_cost }}{% endif %}{% if redistribute_type %} type {{ redistribute_type }}{% endif %}
    {% endif %}
    {% if redistribute_direct %}
    import-route direct{% if redistribute_cost %} cost {{ redistribute_cost }}{% endif %}{% if redistribute_type %} type {{ redistribute_type }}{% endif %}
    {% endif %}
    {% if redistribute_rip %}
    import-route rip{% if redistribute_cost %} cost {{ redistribute_cost }}{% endif %}{% if redistribute_type %} type {{ redistribute_type }}{% endif %}
    {% endif %}
    {% if redistribute_bgp %}
    import-route bgp{% if redistribute_cost %} cost {{ redistribute_cost }}{% endif %}{% if redistribute_type %} type {{ redistribute_type }}{% endif %}
    {% endif %}
    {% if redistribute_isis %}
    import-route isis{% if redistribute_cost %} cost {{ redistribute_cost }}{% endif %}{% if redistribute_type %} type {{ redistribute_type }}{% endif %}
    {% endif %}
    quit
    {% endif %}

  example:
    process_id: 1
    router_id: "1.1.1.1"
    areas: "0.0.0.0:192.168.1.0/24,0.0.0.1:192.168.2.0/24"
    configure_area_auth: true
    area_auth_type: "md5"
    area_auth_area: "0.0.0.1"
    area_auth_password: "ospfauth123"
    configure_interface_auth: true
    interface_auth_interface: "Vlanif 100"
    interface_auth_type: "md5"
    interface_auth_password: "intfauth123"
    configure_advanced: true
    stub_area: "0.0.0.2"
    area_range: "0.0.0.1:192.168.0.0/22"
    configure_interface: true
    interface_name: "Vlanif 100"
    configure_interface_routing: false
    interface_cost: 100
    interface_priority: 1
    configure_timers: true
    hello_interval: 10
    dead_interval: 40
    configure_redistribute: true
    redistribute_static: true
    redistribute_direct: true
    redistribute_cost: 100
    redistribute_type: "2"

dhcp_service:
  description: "DHCP服务配置"
  parameters:
    # DHCP服务器配置开关
    enable_dhcp_server:
      type: "boolean"
      required: false
      default: false
      description: "是否配置DHCP服务器"
      order: 1

    dhcp_type:
      type: "string"
      required: false
      options: ["global", "interface"]
      default: "global"
      description: "华为地址池类型：global(全局地址池) 或 interface(接口地址池)"
      order: 2
    pool_name:
      type: "string"
      required: false
      max_length: 32
      description: "DHCP池名称（全局地址池模式必填）"
      order: 3

    # 接口地址池模式参数
    vlanif:
      type: "string"
      required: false
      description: "VLAN接口（如：Vlanif100）"
      order: 4
    interface_ip:
      type: "string"
      required: false
      description: "接口IP地址（接口地址池模式，支持CIDR格式，如：192.168.1.1/24）"
      order: 5
    interface_description:
      type: "string"
      required: false
      max_length: 80
      description: "接口描述（接口地址池模式）"
      order: 6

    # 通用参数
    network:
      type: "string"
      required: false
      description: "网络地址（全局地址池模式，支持CIDR格式，如：192.168.1.0/24）"
      order: 7
    mask:
      type: "string"
      required: false
      description: "子网掩码（可选，CIDR格式时自动计算）"
      order: 8
    gateway:
      type: "string"
      required: false
      description: "默认网关"
      order: 9
    dns_servers:
      type: "string"
      required: false
      description: "DNS服务器列表（逗号分隔）"
      order: 10
    excluded_addresses:
      type: "string"
      required: false
      description: "排除地址（支持范围，如：192.168.1.1-192.168.1.10,192.168.1.100）"
      order: 11
    lease_time:
      type: "string"
      required: false
      description: "租约时间（格式：天 小时 分钟，如：1 0 0）"
      order: 12

    # DHCP中继配置参数
    enable_dhcp_relay:
      type: "boolean"
      required: false
      default: false
      description: "是否配置DHCP中继"
      order: 13
    relay_server_address:
      type: "string"
      required: false
      description: "DHCP服务器地址（多个地址用逗号分隔）"
      order: 14
    relay_interface:
      type: "string"
      required: false
      description: "中继接口名称（如：Vlanif100）"
      order: 15
  commands: |
    {% if enable_dhcp_server %}
    # 启用DHCP服务
    dhcp enable

    {% if dhcp_type == 'global' %}
    # 全局地址池模式
    {% if excluded_cmds %}
    {% for addr in excluded_cmds %}
    {% if addr[1] %}
    dhcp server excluded-ip-address {{ addr[0] }} {{ addr[1] }}
    {% else %}
    dhcp server excluded-ip-address {{ addr[0] }}
    {% endif %}
    {% endfor %}
    {% endif %}
    ip pool {{ pool_name }}
     network {{ network }} mask {{ mask }}
    {% if gateway %}
     gateway-list {{ gateway }}
    {% endif %}
    {% if dns_servers %}
     dns-list {{ dns_servers.replace(',', ' ').replace('  ', ' ').strip() }}
    {% endif %}
    {% if lease_time %}
     lease day {{ lease_time }}
    {% endif %}
    quit
    {% if vlanif %}
    interface {{ vlanif }}
    dhcp select global
    quit
    {% endif %}

    {% else %}
    # 接口地址池模式
    {% if vlanif %}
    interface {{ vlanif }}
    {% if interface_ip %}
    ip address {{ interface_ip_addr }} {{ interface_subnet_mask }}
    {% endif %}
    {% if interface_description %}
    description {{ interface_description }}
    {% endif %}
    dhcp select interface
    {% if gateway %}
    dhcp server gateway-list {{ gateway }}
    {% else %}
    {% if interface_ip %}
    dhcp server gateway-list {{ interface_ip_addr }}
    {% endif %}
    {% endif %}
    {% if dns_servers %}
    dhcp server dns-list {{ dns_servers.replace(',', ' ').replace('  ', ' ').strip() }}
    {% endif %}
    {% if lease_time %}
    dhcp server lease day {{ lease_time }}
    {% endif %}
    {% if excluded_cmds %}
    {% for addr in excluded_cmds %}
    {% if addr[1] %}
    dhcp server excluded-ip-address {{ addr[0] }} {{ addr[1] }}
    {% else %}
    dhcp server excluded-ip-address {{ addr[0] }}
    {% endif %}
    {% endfor %}
    {% endif %}
    undo shutdown
    quit
    {% endif %}
    {% endif %}
    {% endif %}

    # DHCP中继配置
    {% if enable_dhcp_relay and relay_server_address and relay_interface %}
    interface {{ relay_interface }}
    {% for server in relay_server_list %}
    dhcp relay server-ip {{ server }}
    {% endfor %}
    quit
    {% endif %}
  example:
    dhcp_type: "global"
    pool_name: "vlan100-pool"
    vlanif: "Vlanif100"
    network: "192.168.100.0/24"
    gateway: "192.168.100.1"
    dns_servers: "8.8.8.8,8.8.4.4"
    excluded_addresses: "192.168.100.1-192.168.100.10,192.168.100.100"



static_route:
  description: "静态路由配置"
  parameters:
    destination:
      type: "string"
      required: true
      description: "目标网络"
    mask:
      type: "string"
      required: true
      description: "子网掩码"
    next_hop:
      type: "string"
      required: true
      description: "下一跳地址"
    preference:
      type: "integer"
      required: false
      default: 60
      range: [1, 255]
      description: "路由优先级"
    description:
      type: "string"
      required: false
      max_length: 80
      description: "路由描述"
  commands: |
    ip route-static {{ destination }} {{ mask }} {{ next_hop }}{% if description %} description {{ description }}{% endif %}
  example:
    destination: "10.0.0.0"
    mask: "255.0.0.0"
    next_hop: "192.168.1.1"
    preference: 60

interface_ip:
  description: "接口IP地址配置"
  parameters:
    interface:
      type: "string"
      required: true
      description: "接口名称（支持范围，如：GigabitEthernet0/0/1-4）"
    ip_address:
      type: "string"
      required: true
      description: "IP地址（支持CIDR格式，如：192.168.1.1/24）"
    subnet_mask:
      type: "string"
      required: false
      description: "子网掩码（可选，CIDR格式时自动计算）"
    description:
      type: "string"
      required: false
      max_length: 80
      description: "接口描述"
  commands: |
    {% for port in port_list %}
    interface {{ port }}
    ip address {{ ip_address }} {{ subnet_mask }}
    {% if description %}
     description {{ description }}
    {% endif %}
    undo shutdown
    quit
    {% endfor %}
  example:
    interface: "GigabitEthernet0/0/1"
    ip_address: "192.168.1.1/24"
    description: "LAN interface"

stp_config:
  description: "STP配置"
  parameters:
    stp_mode:
      type: "string"
      required: true
      options: ["rstp", "mstp"]
      description: "生成树协议模式"
      order: 1
    global_enable:
      type: "boolean"
      required: false
      default: false
      description: "全局使能生成树协议"
      order: 2
    root_bridge_config:
      type: "string"
      required: false
      options: ["none", "primary", "secondary"]
      description: "根桥配置"
      order: 3
    bpdu_protection:
      type: "boolean"
      required: false
      default: false
      description: "全局使能BPDU保护"
      order: 4
    bridge_priority:
      type: "integer"
      required: false
      min: 0
      max: 61440
      step: 4096
      description: "桥优先级（步长4096）"
      order: 5

    # MSTP域配置
    region_name:
      type: "string"
      required: false
      description: "MST域名（最大32字符）"
      order: 6
    revision_level:
      type: "integer"
      required: false
      min: 0
      max: 65535
      description: "修订级别（0-65535）"
      order: 7
    instance_vlan_mapping:
      type: "string"
      required: false
      description: "实例VLAN映射（如：1:10,20;2:30,40）"
      order: 8
    instance_id:
      type: "integer"
      required: false
      min: 1
      max: 64
      description: "MSTP实例ID（1-64）"
      order: 9

    # 时间参数配置
    configure_timing_params:
      type: "boolean"
      required: false
      default: false
      description: "是否配置影响RSTP/MSTP拓扑收敛的参数"
      order: 10
    hello_time:
      type: "integer"
      required: false
      min: 1
      max: 10
      description: "Hello时间（1-10秒）"
      order: 11
    forward_delay:
      type: "integer"
      required: false
      min: 4
      max: 30
      description: "转发延迟（4-30秒）"
      order: 12
    max_age:
      type: "integer"
      required: false
      min: 6
      max: 40
      description: "最大老化时间（6-40秒）"
      order: 13

    # 端口配置
    configure_port_blocking:
      type: "boolean"
      required: false
      default: false
      description: "是否配置端口阻塞"
      order: 14
    interface:
      type: "string"
      required: false
      description: "接口名称（支持范围，如：GigabitEthernet1/0/1-4）"
      order: 15
    port_cost:
      type: "integer"
      required: false
      min: 1
      max: 200000000
      description: "端口开销（1-200000000）"
      order: 16

    # STP保护功能配置
    edge_port:
      type: "boolean"
      required: false
      default: false
      description: "边缘端口功能"
      order: 17
    edge_port_interface:
      type: "string"
      required: false
      description: "边缘端口接口（支持范围，如：GigabitEthernet1/0/1-4）"
      order: 18
    root_protection:
      type: "boolean"
      required: false
      default: false
      description: "根保护功能"
      order: 19
    root_protection_interface:
      type: "string"
      required: false
      description: "根保护接口（支持范围，如：GigabitEthernet1/0/5-8）"
      order: 20
    loop_protection:
      type: "boolean"
      required: false
      default: false
      description: "环路保护功能"
      order: 21
    loop_protection_interface:
      type: "string"
      required: false
      description: "环路保护接口（支持范围，如：GigabitEthernet1/0/9-12）"
      order: 22

  commands: |
    # 配置STP模式
    system-view
    stp mode {{ stp_mode }}

    {% if global_enable %}
    stp enable
    {% endif %}

    {% if bpdu_protection %}
    stp bpdu-protection
    {% endif %}

    {% if bridge_priority is defined %}
    {% if stp_mode == 'mstp' and instance_id is defined %}
    stp instance {{ instance_id }} priority {{ bridge_priority }}
    {% else %}
    stp priority {{ bridge_priority }}
    {% endif %}
    {% endif %}

    {% if root_primary %}
    {% if stp_mode == 'mstp' and instance_id is defined %}
    stp instance {{ instance_id }} root primary
    {% else %}
    stp root primary
    {% endif %}
    {% endif %}

    {% if root_secondary %}
    {% if stp_mode == 'mstp' and instance_id is defined %}
    stp instance {{ instance_id }} root secondary
    {% else %}
    stp root secondary
    {% endif %}
    {% endif %}

    {% if stp_mode == 'mstp' %}
    {% if region_name or revision_level or instance_vlan_mapping %}
    stp region-configuration
    {% if region_name %}
     region-name {{ region_name }}
    {% endif %}
    {% if revision_level is defined %}
     revision-level {{ revision_level }}
    {% endif %}
    {% if instance_vlan_mapping %}
    {% for mapping in instance_vlan_list %}
     instance {{ mapping.instance }} vlan {{ mapping.vlans }}
    {% endfor %}
    {% endif %}
     active region-configuration
    quit
    {% endif %}
    {% endif %}

    {% if hello_time is defined %}
    {% if stp_mode == 'mstp' and instance_id is defined %}
    stp instance {{ instance_id }} timer hello {{ hello_time }}
    {% else %}
    stp timer hello {{ hello_time }}
    {% endif %}
    {% endif %}

    {% if forward_delay is defined %}
    {% if stp_mode == 'mstp' and instance_id is defined %}
    stp instance {{ instance_id }} timer forward-delay {{ forward_delay }}
    {% else %}
    stp timer forward-delay {{ forward_delay }}
    {% endif %}
    {% endif %}

    {% if max_age is defined %}
    {% if stp_mode == 'mstp' and instance_id is defined %}
    stp instance {{ instance_id }} timer max-age {{ max_age }}
    {% else %}
    stp timer max-age {{ max_age }}
    {% endif %}
    {% endif %}

    {% if interface and port_cost %}
    {% for port in port_list %}
    interface {{ port }}
    {% if stp_mode == 'mstp' and instance_id is defined %}
     stp instance {{ instance_id }} cost {{ port_cost }}
    {% else %}
     stp cost {{ port_cost }}
    {% endif %}
    quit
    {% endfor %}
    {% endif %}

    {% if edge_port and edge_port_interface %}
    {% for port in edge_port_list %}
    interface {{ port }}
     stp edged-port enable
    quit
    {% endfor %}
    {% endif %}

    {% if root_protection and root_protection_interface %}
    {% for port in root_protection_port_list %}
    interface {{ port }}
     stp root-protection
    quit
    {% endfor %}
    {% endif %}

    {% if loop_protection and loop_protection_interface %}
    {% for port in loop_protection_port_list %}
    interface {{ port }}
     stp loop-protection
    quit
    {% endfor %}
    {% endif %}

    return

  example:
    stp_mode: "mstp"
    global_enable: true
    root_bridge_config: "primary"
    bpdu_protection: false
    bridge_priority: 4096
    region_name: "example"
    revision_level: 0
    instance_vlan_mapping: "1:10,20;2:30,40"
    instance_id: 1
    configure_timing_params: true
    hello_time: 2
    forward_delay: 15
    max_age: 20
    configure_port_blocking: true
    interface: "GigabitEthernet1/0/1-4"
    port_cost: 20000
    edge_port: true
    edge_port_interface: "GigabitEthernet1/0/5-8"
    root_protection: true
    root_protection_interface: "GigabitEthernet1/0/9-12"

vrrp_config:
  description: "VRRP网关冗余配置（华为VRRP协议）"
  parameters:
    # 基础VRRP配置
    vlan_id:
      type: "integer"
      required: true
      range: [1, 4094]
      description: "VLAN ID"
      placeholder: "100"
      order: 1

    interface_ip:
      type: "string"
      required: true
      pattern: "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$"
      description: "接口IP地址"
      placeholder: "192.168.100.1/24"
      order: 2

    vrrp_group_id:
      type: "integer"
      required: true
      range: [1, 255]
      description: "VRRP组ID"
      placeholder: "1"
      order: 3

    virtual_ip:
      type: "string"
      required: true
      pattern: "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"
      description: "虚拟网关IP地址"
      placeholder: "192.168.100.254"
      order: 4

    priority:
      type: "integer"
      required: false
      range: [1, 254]
      description: "VRRP优先级（数值越大优先级越高）"
      placeholder: "100"
      default: 100
      order: 5

    # 高级配置选项
    configure_advanced:
      type: "boolean"
      required: false
      default: false
      description: "配置高级选项"
      order: 6

    preempt_mode:
      type: "boolean"
      required: false
      default: false
      description: "启用抢占模式"
      order: 7

    preempt_delay:
      type: "integer"
      required: false
      range: [0, 18000]
      description: "抢占延迟时间（秒）"
      placeholder: "0"
      default: 0
      order: 8

    advertisement_interval:
      type: "integer"
      required: false
      range: [1, 255]
      description: "通告间隔（秒）"
      placeholder: "1"
      default: 1
      order: 9

    # 认证配置
    configure_authentication:
      type: "boolean"
      required: false
      default: false
      description: "配置认证"
      order: 10

    auth_mode:
      type: "string"
      required: false
      options: ["simple", "md5"]
      description: "认证模式"
      default: "simple"
      order: 11

    auth_key:
      type: "string"
      required: false
      description: "认证密钥"
      placeholder: "vrrpkey123"
      order: 12

    # VRRP与BFD联动实现快速切换
    configure_bfd:
      type: "boolean"
      required: false
      default: false
      description: "配置VRRP与BFD联动实现快速切换"
      order: 13

    bfd_session_name:
      type: "string"
      required: false
      description: "BFD会话名称"
      placeholder: "vrrp-fast-switch"
      order: 14

    bfd_peer_ip:
      type: "string"
      required: false
      pattern: "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"
      description: "BFD对端IP地址"
      placeholder: "10.1.1.2"
      order: 15

    bfd_local_discriminator:
      type: "integer"
      required: false
      range: [1, 16384]
      description: "BFD本地标识符"
      placeholder: "1"
      default: 1
      order: 16

    bfd_remote_discriminator:
      type: "integer"
      required: false
      range: [1, 16384]
      description: "BFD远端标识符"
      placeholder: "2"
      default: 2
      order: 17

    bfd_priority_reduce:
      type: "integer"
      required: false
      range: [1, 255]
      description: "BFD Down时优先级减少值"
      placeholder: "40"
      default: 40
      order: 18

    # VRRP与基于VRID的动态BFD会话联动配置
    configure_dynamic_bfd:
      type: "boolean"
      required: false
      default: false
      description: "配置VRRP与基于VRID的动态BFD会话联动"
      order: 19

    dynamic_bfd_template:
      type: "string"
      required: false
      description: "动态BFD模板名称"
      placeholder: "bfd-template-vrrp"
      order: 20

    # VRRP与接口状态联动监视上行接口配置
    configure_interface_monitor:
      type: "boolean"
      required: false
      default: false
      description: "配置VRRP与接口状态联动监视上行接口"
      order: 21

    monitor_interface:
      type: "string"
      required: false
      description: "监视的上行接口"
      placeholder: "GigabitEthernet0/0/2"
      order: 22

    monitor_priority_reduce:
      type: "integer"
      required: false
      range: [1, 255]
      description: "监视接口Down时优先级减少值"
      placeholder: "20"
      default: 20
      order: 23

    # VRRP与BFD联动监视上行链路配置
    configure_bfd_uplink:
      type: "boolean"
      required: false
      default: false
      description: "配置VRRP与BFD联动监视上行链路"
      order: 24

    bfd_uplink_session_name:
      type: "string"
      required: false
      description: "BFD会话名称"
      placeholder: "uplink-monitor"
      order: 25

    bfd_uplink_peer_ip:
      type: "string"
      required: false
      pattern: "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"
      description: "BFD对端IP地址"
      placeholder: "172.16.1.2"
      order: 26

    bfd_uplink_local_discriminator:
      type: "integer"
      required: false
      range: [1, 16384]
      description: "BFD本地标识符"
      placeholder: "1"
      default: 1
      order: 27

    bfd_uplink_remote_discriminator:
      type: "integer"
      required: false
      range: [1, 16384]
      description: "BFD远端标识符"
      placeholder: "2"
      default: 2
      order: 28

    bfd_uplink_priority_reduce:
      type: "integer"
      required: false
      range: [1, 255]
      description: "BFD Down时优先级减少值"
      placeholder: "40"
      default: 40
      order: 29

    # VRRP与NQA联动监视上行链路配置
    configure_nqa_uplink:
      type: "boolean"
      required: false
      default: false
      description: "配置VRRP与NQA联动监视上行链路"
      order: 30

    nqa_test_instance:
      type: "string"
      required: false
      description: "NQA测试例名称"
      placeholder: "nqa-test-uplink"
      order: 31

    nqa_destination_ip:
      type: "string"
      required: false
      pattern: "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$"
      description: "NQA目的IP地址"
      placeholder: "8.8.8.8"
      order: 32

    nqa_priority_reduce:
      type: "integer"
      required: false
      range: [1, 255]
      description: "NQA测试失败时优先级减少值"
      placeholder: "25"
      default: 25
      order: 33

    # VRRP与路由联动监视上行链路配置
    configure_route_monitor:
      type: "boolean"
      required: false
      default: false
      description: "配置VRRP与路由联动监视上行链路"
      order: 34

    monitor_route:
      type: "string"
      required: false
      pattern: "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}/[0-9]{1,2}$"
      description: "监视的路由网段"
      placeholder: "0.0.0.0/0"
      order: 35

    route_priority_reduce:
      type: "integer"
      required: false
      range: [1, 255]
      description: "路由消失时优先级减少值"
      placeholder: "40"
      default: 40
      order: 36

  commands: |
    # 创建VLAN
    vlan {{ vlan_id }}
    quit

    # 配置VLAN接口
    interface Vlanif{{ vlan_id }}
    ip address {{ interface_ip | ip_from_cidr }} {{ interface_ip | netmask_from_cidr }}

    # 基础VRRP配置
    vrrp vrid {{ vrrp_group_id }} virtual-ip {{ virtual_ip }}
    {% if priority != 100 %}
    vrrp vrid {{ vrrp_group_id }} priority {{ priority }}
    {% endif %}

    {% if configure_advanced %}
    # 高级配置
    {% if preempt_mode %}
    vrrp vrid {{ vrrp_group_id }} preempt-mode timer delay {{ preempt_delay }}
    {% else %}
    vrrp vrid {{ vrrp_group_id }} preempt-mode disable
    {% endif %}
    {% if advertisement_interval != 1 %}
    vrrp vrid {{ vrrp_group_id }} timer advertise {{ advertisement_interval }}
    {% endif %}
    {% endif %}

    {% if configure_authentication and auth_mode and auth_key %}
    # 认证配置
    {% if auth_mode == "simple" %}
    vrrp vrid {{ vrrp_group_id }} authentication-mode simple plain {{ auth_key }}
    {% elif auth_mode == "md5" %}
    vrrp vrid {{ vrrp_group_id }} authentication-mode md5 plain {{ auth_key }}
    {% endif %}
    {% endif %}

    quit

    {% if configure_bfd %}
    # VRRP与BFD联动实现快速切换
    bfd
    quit

    bfd {{ bfd_session_name|default('vrrp-fast-switch') }} bind peer-ip {{ bfd_peer_ip }} interface Vlanif{{ vlan_id }}
    discriminator local {{ bfd_local_discriminator|default(1) }}
    discriminator remote {{ bfd_remote_discriminator|default(2) }}
    commit
    quit

    interface Vlanif{{ vlan_id }}
    vrrp vrid {{ vrrp_group_id }} track bfd {{ bfd_local_discriminator|default(1) }} reduce {{ bfd_priority_reduce|default(40) }}
    quit
    {% endif %}

    {% if configure_dynamic_bfd %}
    # VRRP与基于VRID的动态BFD会话联动配置
    bfd-template {{ dynamic_bfd_template }}
    min-tx-interval {{ bfd_min_tx|default(100) }}
    min-rx-interval {{ bfd_min_rx|default(100) }}
    detect-multiplier {{ bfd_multiplier|default(3) }}
    quit

    interface Vlanif{{ vlan_id }}
    vrrp vrid {{ vrrp_group_id }} track bfd-template {{ dynamic_bfd_template }} reduced 10
    quit
    {% endif %}

    {% if configure_interface_monitor %}
    # VRRP与接口状态联动监视上行接口配置
    interface Vlanif{{ vlan_id }}
    vrrp vrid {{ vrrp_group_id }} track interface {{ monitor_interface }} reduced {{ monitor_priority_reduce }}
    quit
    {% endif %}

    {% if configure_bfd_uplink %}
    # VRRP与BFD联动监视上行链路配置
    bfd
    quit

    bfd {{ bfd_uplink_session_name|default('uplink-monitor') }} bind peer-ip {{ bfd_uplink_peer_ip }}
    discriminator local {{ bfd_uplink_local_discriminator|default(1) }}
    discriminator remote {{ bfd_uplink_remote_discriminator|default(2) }}
    commit
    quit

    interface Vlanif{{ vlan_id }}
    vrrp vrid {{ vrrp_group_id }} track bfd {{ bfd_uplink_local_discriminator|default(1) }} reduce {{ bfd_uplink_priority_reduce|default(40) }}
    quit
    {% endif %}

    {% if configure_nqa_uplink %}
    # VRRP与NQA联动监视上行链路配置
    nqa test-instance {{ nqa_test_instance }}
    test-type icmp
    destination-address ipv4 {{ nqa_destination_ip }}
    frequency 1000
    probe-count 3
    timeout 3
    start now
    quit

    interface Vlanif{{ vlan_id }}
    vrrp vrid {{ vrrp_group_id }} track nqa {{ nqa_test_instance }} reduced {{ nqa_priority_reduce }}
    quit
    {% endif %}

    {% if configure_route_monitor %}
    # VRRP与路由联动监视上行链路配置
    interface Vlanif{{ vlan_id }}
    vrrp vrid {{ vrrp_group_id }} track ip route {{ monitor_route }} reduced {{ route_priority_reduce }}
    quit
    {% endif %}

    # 保存配置
    save

  example:
    vlan_id: 100
    interface_ip: "192.168.100.1/24"
    vrrp_group_id: 1
    virtual_ip: "192.168.100.254"
    priority: 110
    configure_advanced: true
    preempt_mode: true
    preempt_delay: 5
    advertisement_interval: 1
    configure_authentication: true
    auth_mode: "simple"
    auth_key: "vrrpkey123"
    configure_bfd: true
    bfd_session_name: "vrrp-fast-switch"
    bfd_peer_ip: "10.1.1.2"
    bfd_local_discriminator: 1
    bfd_remote_discriminator: 2
    bfd_priority_reduce: 40
    configure_bfd_uplink: true
    bfd_uplink_session_name: "uplink-monitor"
    bfd_uplink_peer_ip: "172.16.1.2"
    bfd_uplink_local_discriminator: 1
    bfd_uplink_remote_discriminator: 2
    bfd_uplink_priority_reduce: 40
    configure_dynamic_bfd: false
    configure_interface_monitor: true
    monitor_interface: "GigabitEthernet0/0/2"
    monitor_priority_reduce: 20
    configure_bfd_uplink: false
    configure_nqa_uplink: true
    nqa_test_instance: "nqa-test-uplink"
    nqa_destination_ip: "8.8.8.8"
    nqa_priority_reduce: 25
    configure_route_monitor: false
